{"ast":null,"code":"// src/services/PostService.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8081/api/v1';\nclass PostService {\n  getPosts() {\n    return axios.get(API_BASE_URL + '/posts').catch(error => {\n      console.error(\"Error fetching posts:\", error);\n      throw error;\n    });\n  }\n  createPost(title, content) {\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('content', content);\n    return axios.post(API_BASE_URL + '/posts', formData).catch(error => {\n      console.error(\"Error creating post:\", error);\n      throw error;\n    });\n  }\n  getPostById(postId) {\n    return axios.get(`${API_BASE_URL}/posts/${postId}`).catch(error => {\n      console.error(\"Error fetching post by ID:\", error);\n      throw error;\n    });\n  }\n  updatePost(postId, title, content) {\n    return axios.put(`${API_BASE_URL}/posts/${postId}`, {\n      title,\n      content\n    }).catch(error => {\n      console.error(\"Error updating post:\", error);\n      throw error;\n    });\n  }\n  deletePost(postId) {\n    // Ensure this method is present and correctly implemented\n    return axios.delete(`${API_BASE_URL}/posts/${postId}`).catch(error => {\n      console.error(\"Error deleting post:\", error);\n      throw error;\n    });\n  }\n  likePost(postId) {\n    return axios.post(`${API_BASE_URL}/posts/${postId}/like`).catch(error => {\n      console.error(\"Error liking post:\", error);\n      throw error;\n    });\n  }\n  unlikePost(postId) {\n    return axios.post(`${API_BASE_URL}/posts/${postId}/unlike`).catch(error => {\n      console.error(\"Error unliking post:\", error);\n      throw error;\n    });\n  }\n}\nexport default new PostService();","map":{"version":3,"names":["axios","API_BASE_URL","PostService","getPosts","get","catch","error","console","createPost","title","content","formData","FormData","append","post","getPostById","postId","updatePost","put","deletePost","delete","likePost","unlikePost"],"sources":["C:/Users/User/Desktop/paf_N/History-Lovers/src/services/PostService.js"],"sourcesContent":["// src/services/PostService.js\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8081/api/v1';\r\n\r\nclass PostService {\r\n  getPosts() {\r\n    return axios.get(API_BASE_URL + '/posts')\r\n      .catch(error => {\r\n        console.error(\"Error fetching posts:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  createPost(title, content) {\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('content', content);\r\n    return axios.post(API_BASE_URL + '/posts', formData)\r\n      .catch(error => {\r\n        console.error(\"Error creating post:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  getPostById(postId) {\r\n    return axios.get(`${API_BASE_URL}/posts/${postId}`)\r\n      .catch(error => {\r\n        console.error(\"Error fetching post by ID:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  updatePost(postId, title, content) {\r\n    return axios.put(`${API_BASE_URL}/posts/${postId}`, { title, content })\r\n      .catch(error => {\r\n        console.error(\"Error updating post:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  deletePost(postId) { // Ensure this method is present and correctly implemented\r\n    return axios.delete(`${API_BASE_URL}/posts/${postId}`)\r\n      .catch(error => {\r\n        console.error(\"Error deleting post:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  likePost(postId) {\r\n    return axios.post(`${API_BASE_URL}/posts/${postId}/like`)\r\n      .catch(error => {\r\n        console.error(\"Error liking post:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  unlikePost(postId) {\r\n    return axios.post(`${API_BASE_URL}/posts/${postId}/unlike`)\r\n      .catch(error => {\r\n        console.error(\"Error unliking post:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n}\r\n\r\nexport default new PostService();"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,8BAA8B;AAEnD,MAAMC,WAAW,CAAC;EAChBC,QAAQA,CAAA,EAAG;IACT,OAAOH,KAAK,CAACI,GAAG,CAACH,YAAY,GAAG,QAAQ,CAAC,CACtCI,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb,CAAC,CAAC;EACN;EAEAE,UAAUA,CAACC,KAAK,EAAEC,OAAO,EAAE;IACzB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;IAC/BE,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEH,OAAO,CAAC;IACnC,OAAOV,KAAK,CAACc,IAAI,CAACb,YAAY,GAAG,QAAQ,EAAEU,QAAQ,CAAC,CACjDN,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb,CAAC,CAAC;EACN;EAEAS,WAAWA,CAACC,MAAM,EAAE;IAClB,OAAOhB,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,UAAUe,MAAM,EAAE,CAAC,CAChDX,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb,CAAC,CAAC;EACN;EAEAW,UAAUA,CAACD,MAAM,EAAEP,KAAK,EAAEC,OAAO,EAAE;IACjC,OAAOV,KAAK,CAACkB,GAAG,CAAC,GAAGjB,YAAY,UAAUe,MAAM,EAAE,EAAE;MAAEP,KAAK;MAAEC;IAAQ,CAAC,CAAC,CACpEL,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb,CAAC,CAAC;EACN;EAEAa,UAAUA,CAACH,MAAM,EAAE;IAAE;IACnB,OAAOhB,KAAK,CAACoB,MAAM,CAAC,GAAGnB,YAAY,UAAUe,MAAM,EAAE,CAAC,CACnDX,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb,CAAC,CAAC;EACN;EAEAe,QAAQA,CAACL,MAAM,EAAE;IACf,OAAOhB,KAAK,CAACc,IAAI,CAAC,GAAGb,YAAY,UAAUe,MAAM,OAAO,CAAC,CACtDX,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACb,CAAC,CAAC;EACN;EAEAgB,UAAUA,CAACN,MAAM,EAAE;IACjB,OAAOhB,KAAK,CAACc,IAAI,CAAC,GAAGb,YAAY,UAAUe,MAAM,SAAS,CAAC,CACxDX,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb,CAAC,CAAC;EACN;AACF;AAEA,eAAe,IAAIJ,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}